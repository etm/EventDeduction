#!/usr/bin/ruby
require_relative 'lib/load'

name = File.basename(__FILE__,'.rb')

groups = EvDed::load_transform_classify(File.join(__dir__,'data','chess_piece_production.yaml'))

puts "Groups, sensors, number of data points and classification:"
groups.each do |k,sensors|
  puts "  #{k}"
  sensors.each do |k,series|
    puts "    #{k}: #{series.length} (#{series.classification})"
  end
end

puts "\nStep 4: Sensor and joint changes ..."
groups = EvDed::align_timestamps(groups)

EvDed::write_timestamps(groups,name)


jcs = EvDed::joint_changes_naive(groups)
jcs.each do |t,v|
  puts "  #{EvDed::fts(t)}: #{v.length}, #{v}"
end

puts "\nStep 5: Sensor Importance ..."
sis = EvDed::sensor_importance_naive(groups, jcs)

EvDed::sensor_importance_print(sis)
EvDed::sensor_importance_write(sis,name)
