#!/usr/bin/ruby
require_relative 'lib/load'

groups = EvDed::load_transform_classify(File.join(__dir__,'data','chess_piece_production.yaml'))

puts "Groups, sensors, number of data points and classification:"
groups.each do |k,sensors|
  puts "  #{k}"
  sensors.each do |k,series|
    puts "    #{k}: #{series.length} (#{series.classification})"
  end
end

puts "\nStep 4: Sensor and joint changes ..."
groups = EvDed::align_timestamps(groups)
jcs = EvDed::joint_changes_naive(groups)
jcs.each do |t,v|
  puts "  #{EvDed::fts(t)}: #{v.length}, #{v}"
end

puts "\nStep 5: Sensor Importance ..."
sis = EvDed::sensor_importance_naive(groups, jcs)
sis.each do |s,i|
  puts "  #{s}: #{i[0].round(3)} (#{EvDed::ftsa(i[1]).length} events#{i[0] == 0 ? ' -> no events, or only event on first timestamp' : ''})"
end
